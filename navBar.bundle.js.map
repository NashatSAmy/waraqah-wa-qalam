{"version":3,"file":"navBar.bundle.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://waraqah-wa-qalam/./src/navModule.js"],"sourcesContent":["// Information Holder object\r\nconst navInfo = {\r\n  projectsNames: [\"My Projects\"],\r\n};\r\n\r\n// Service Provider object.\r\nconst navDomManipulation = {\r\n  // This method update the custom projects section on the user screen using data from an array.\r\n  updateCustomProjects(projectsNames) {\r\n    const projectsList = document.querySelector(\".costume-projects\");\r\n    projectsNames.slice(projectsNames.length - 1).forEach((projectName) => {\r\n      let listItem = document.createElement(\"li\");\r\n      listItem.classList.add(\"nav-item\", \"project\");\r\n      listItem.innerText = projectName;\r\n      projectsList.appendChild(listItem);\r\n    });\r\n  },\r\n  // This method removes a selected project name from the users screen.\r\n  removeProject(removedProject) {\r\n    removedProject.parentNode.removeChild(removedProject);\r\n  },\r\n  navNewItemError(newProjectName) {\r\n    newProjectName.value = \"INVALID ENTRY...\";\r\n    document.getElementById(\"newProject\").classList.add(\"errorAlert\");\r\n    setTimeout(() => {\r\n      newProjectName.value = \"\";\r\n      document.getElementById(\"newProject\").classList.remove(\"errorAlert\");\r\n    }, 1200);\r\n  },\r\n};\r\n\r\n// Service Provider object.\r\nconst navInfoEditing = {\r\n  // This method adds new project name entered by the user to the projectsNames array.\r\n  addNewProjectName(projectsNames, newProjectName) {\r\n    projectsNames.push(newProjectName.value.trim());\r\n  },\r\n\r\n  // This method removes a project name selected by the user from the projectsNames array.\r\n  removeProjectName(deletedProjectName, projectsNames) {\r\n    projectsNames = projectsNames.filter(\r\n      (projectName) => projectName !== deletedProjectName\r\n    );\r\n    return projectsNames;\r\n  },\r\n};\r\n\r\n// Coordinator object.\r\nconst navCoordinator = {\r\n  navUpdate() {\r\n    navDomManipulation.updateCustomProjects(navInfo.projectsNames);\r\n  },\r\n};\r\n\r\n// Controller object.\r\nconst navController = {\r\n  navRemoveItem(e) {\r\n    if (!e.target.classList.contains(\"removeProject\")) return;\r\n    const project = e.target;\r\n    const deletedProjectName = project.innerText;\r\n    navDomManipulation.removeProject(project);\r\n    navInfo.projectsNames = navInfoEditing.removeProjectName(\r\n      deletedProjectName,\r\n      navInfo.projectsNames\r\n    );\r\n    localStorage.setItem(\"projectsNames\", JSON.stringify(navInfo.projectsNames))\r\n  },\r\n\r\n  navNewItem(e) {\r\n    e.preventDefault();\r\n    const newProjectName = document.getElementById(\"newProject-name\");\r\n    const validationTest = /\\w/;\r\n    if (validationTest.test(newProjectName.value) == true) {\r\n      navInfoEditing.addNewProjectName(navInfo.projectsNames, newProjectName);\r\n      newProjectName.value = \"\";\r\n      navCoordinator.navUpdate();\r\n      localStorage.setItem(\"projectsNames\", JSON.stringify(navInfo.projectsNames))\r\n      resetAllNav();\r\n    } else {\r\n      navDomManipulation.navNewItemError(newProjectName);\r\n    }\r\n  },\r\n\r\n  updateNavProjectsNamesListFromLS() {\r\n    if (!localStorage.getItem(\"projectsNames\")) {\r\n      localStorage.setItem(\"projectsNames\", JSON.stringify(navInfo.projectsNames))\r\n    };\r\n    const projectsList = document.querySelector(\".costume-projects\");\r\n    navInfo.projectsNames = JSON.parse(localStorage.getItem(\"projectsNames\"));\r\n    navInfo.projectsNames.forEach((projectName) => {\r\n      let listItem = document.createElement(\"li\");\r\n      listItem.classList.add(\"nav-item\", \"project\");\r\n      listItem.innerText = projectName;\r\n      projectsList.appendChild(listItem);\r\n    });\r\n  }\r\n};\r\n\r\n// Animations!!!!!!!!!!!!!!!!!!!\r\n\r\n// This function is responsible for the selection animation of the nav-bar items.\r\nfunction selectNavTabAnimation(e) {\r\n  if (!e.target.classList.contains(\"nav-item\")) {\r\n    return;\r\n  }\r\n  if (e.target.classList.contains(\"nav-selected\")) {\r\n    return;\r\n  } else {\r\n    let navItems = document.querySelectorAll(\".nav-selected\");\r\n    navItems.forEach((item) => item.classList.remove(\"nav-selected\"));\r\n    e.target.classList.add(\"nav-selected\");\r\n  }\r\n}\r\n\r\n// This function make the add new project form appear.\r\nfunction addNewProjectAnimation(e) {\r\n  if (e.target.id != \"project-h1\") {\r\n    return;\r\n  } else {\r\n    document.getElementById(\"newProject\").classList.add(\"appear\");\r\n    document.getElementById(\"newProject-name\").focus();\r\n  }\r\n}\r\n\r\n// This function is responsible for the deleting animation of the custom project section.\r\nfunction deleteProjectAnimation(e) {\r\n  if (e.target.id == \"projectDelete\") {\r\n    document\r\n      .querySelectorAll(\".project\")\r\n      .forEach((project) => project.classList.add(\"removeProject\"));\r\n  }\r\n}\r\n\r\n// This function is responsible for resting the nav-bar to its original state.\r\nfunction resetAllNav() {\r\n  document\r\n    .querySelectorAll(\".project\")\r\n    .forEach((project) => project.classList.remove(\"removeProject\"));\r\n  document.getElementById(\"newProject\").classList.remove(\"appear\");\r\n}\r\n\r\n//Functions eventlistener\r\nwindow.addEventListener(\"click\", navController.navRemoveItem);\r\ndocument\r\n  .getElementById(\"newProject\")\r\n  .addEventListener(\"submit\", navController.navNewItem);\r\ndocument\r\n  .getElementById(\"add-newProject\")\r\n  .addEventListener(\"click\", navController.navNewItem);\r\n\r\n//Animations eventlistener\r\ndocument.querySelector(\"MAIN\").addEventListener(\"click\", resetAllNav);\r\nwindow.addEventListener(\"click\", selectNavTabAnimation);\r\nwindow.addEventListener(\"click\", addNewProjectAnimation);\r\nwindow.addEventListener(\"click\", deleteProjectAnimation);\r\n\r\nnavController.updateNavProjectsNamesListFromLS()"],"names":[],"sourceRoot":""}
{"version":3,"file":"newTaskCreation.bundle.js","mappings":";;;;;;;;AAAA;AACA;AACA,iBAAiB,2BAA2B,EAAE,mCAAmC,mCAAmC,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,0BAA0B;AAC5G;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,oEAAoE,0BAA0B;AAC9F;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB,QAAQ,mBAAmB,UAAU,oBAAoB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://waraqah-wa-qalam/./src/newTaskFormModule.js"],"sourcesContent":["// Controller object that controls how the form works.\r\nconst formController = {\r\n  todaysDate: `${new Date().toDateString()} ${new Date().toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})}`,\r\n  subTasks: [],\r\n  notes: [],\r\n  removableSubItem: \"\",\r\n  removableSubItemTest: false,\r\n\r\n  currentProjects() {\r\n    // Function that grabs all of the projects in the custom project list inside the navbar\r\n    const projectsList = document.querySelectorAll(\".project\");\r\n    const projectNames = [];\r\n    projectsList.forEach((project) => projectNames.push(project.innerText));\r\n    return projectNames.map((name) => `<option>${name}</option>`);\r\n  },\r\n  showNoteInput(e) {\r\n    // Function that allow the user to input new sub-item task or note\r\n    const notesAdder = document.getElementById(\"subItemsAdder\");\r\n    const notes = document.getElementById(\"newTask-subItems\");\r\n    if (e.target.id == \"addSubTasks\") {\r\n      const taskInput = document.createElement(\"label\");\r\n      taskInput.classList.add(\"subTaskInputContainer\");\r\n      taskInput.innerHTML = `<input type=\"text\" id=\"subTaskInput\" maxlength=\"80\"><button type=\"button\" id=\"subTaskAddButton\">Add Task</button>`;\r\n      taskInput.addEventListener(\"focusout\", () => setTimeout(() => {\r\n        document.getElementById(\"subTaskInput\").value = \"\";\r\n        taskInput.remove()\r\n      }, 150))\r\n      notesAdder.appendChild(taskInput);\r\n      document.getElementById(\"subTaskInput\").focus();\r\n      document.getElementById(\"subTaskAddButton\").addEventListener(\"click\", (e) => e.preventDefault())\r\n      formController.postNote(\"subTaskInput\");\r\n    } else if (e.target.id == \"addSubNotes\") {\r\n      const noteInput = document.createElement(\"label\");\r\n      noteInput.classList.add(\"subNoteInputContainer\");\r\n      noteInput.innerHTML = `<textarea id=\"subNoteInput\" rows=\"4\"></textarea> <button type=\"button\" id=\"subNoteAddButton\">Add Note</button>`;\r\n      noteInput.addEventListener(\"focusout\", () => setTimeout(() => {\r\n        document.getElementById(\"subNoteInput\").value = \"\"\r\n        noteInput.remove()\r\n      }, 150));\r\n      notes.appendChild(noteInput);\r\n      document.getElementById(\"subNoteInput\").focus()\r\n      formController.postNote(\"subNoteInput\");\r\n    }\r\n    return;\r\n  },\r\n  postNote(id){\r\n    // Function that post a note or a task to the DOM.\r\n    const notes = document.getElementById(\"newTask-subItems\");\r\n    const subItemInput = document.getElementById(id);\r\n    window.addEventListener(\"click\", (e) => {\r\n      if (e.target.id == \"subTaskAddButton\" && subItemInput.value.trim() !== \"\") {\r\n        const newTask = document.createElement(\"div\");\r\n        newTask.classList.add(\"newTask-checkItem\");\r\n        newTask.setAttribute(\"data-elementType\", \"newTask-subItem\");\r\n        newTask.innerHTML = `<div class=\"removeSubItem\" data-elementType=\"newTask-removeSubItem\"></div>\r\n          <label class=\"newTask-checkItemLabel\" data-elementType=\"newTask-task\">${subItemInput.value.trim()}</label>\r\n          <input type=\"checkbox\" data-elementType=\"newTask-taskStatus\">`;\r\n        notes.appendChild(newTask);\r\n      } else if (e.target.id == \"subNoteAddButton\" && subItemInput.value.trim() !== \"\") {\r\n        const newNote = document.createElement(\"div\");\r\n        newNote.classList.add(\"newTask-noteContainer\");\r\n        newNote.setAttribute(\"data-elementType\", \"newTask-subItem\")\r\n        newNote.innerHTML = `<div class=\"removeSubItem\" data-elementType=\"newTask-removeSubItem\"></div>\r\n        <pre class=\"newTask-note\" data-elementType=\"newTask-note\">${subItemInput.value.trim()}</pre> `\r\n        notes.appendChild(newNote);\r\n      }\r\n    })\r\n  },\r\n  removeSubItem(e) {\r\n    // Function that allow users to delete sub-items with double click measures to prevent deleting by mistake\r\n    if (e.target.dataset.elementtype == \"newTask-removeSubItem\" && this.removableSubItemTest == true && this.removableSubItem == e.target.parentNode) {\r\n      this.removableSubItem.remove();\r\n      this.removableSubItemTest = false;\r\n    } else if (\r\n      e.target.parentNode.dataset.elementtype == \"newTask-subItem\"\r\n    ) {\r\n      this.removableSubItem = e.target.parentNode;\r\n      this.removableSubItemTest = true;\r\n    } else {\r\n      this.removableSubItemTest = false;\r\n    }\r\n  },\r\n  calculateETC() {\r\n    const dueDate = new Date(document.getElementsByName(\"newTask-dueDate\")[0].value).getTime()\r\n    const startingDate = new Date().getTime();\r\n    const days = (dueDate - startingDate) / 8.64e+7;\r\n    const hours = (days - Math.floor(days)) * 24;\r\n    const minuets = (hours - Math.floor(hours)) * 60;\r\n    const etc = `ETC: Days ${Math.floor(days)} Hours ${Math.floor(hours)} Minutes ${Math.floor(minuets)}`;\r\n    const etcContainer = document.getElementById(\"newTask-etcContainer\");\r\n    etcContainer.innerText = etc;\r\n  }\r\n};\r\n\r\nfunction addNewTaskFormAppear(e) {\r\n  // Function that add the new task form to the DOM\r\n  if (e.target.id == \"add-task\") {\r\n    let mask = document.createElement(\"div\");\r\n    mask.classList.add(\"blackMask\");\r\n    mask.innerHTML = `\r\n          <form action=\"#\" class=\"newTask\">\r\n        <span class=\"newTask-startingDateTime\">${\r\n          formController.todaysDate\r\n        }</span>\r\n        <label for=\"newTask-name\" class=\"newTask-nameLabel\">Task Name</label>\r\n        <input type=\"text\" name=\"newTask-name\" class=\"newTask-name\" autocomplete=\"off\" required>\r\n        <div class=\"newTask-infoBox1\">\r\n          <label for=\"newTask-dueDate\" class=\"newTask-dueDateLabel\"> Due Date: <input type=\"datetime-local\"\r\n              name=\"newTask-dueDate\" class=\"newTask-dueDate\" required></label>\r\n          <label for=\"newTask-priority\" class=\"newTask-priorityLabel\">Priority: <select name=\"newTask-priority\"\r\n              class=\"newTask-priority\">\r\n              <option value=\"Urgent\">Urgent</option>\r\n              <option value=\"Important\">Important</option>\r\n              <option value=\"Not Important\">Not Important</option>\r\n            </select></label>\r\n            <label for=\"newTask-group\" class=\"newTask-groupLabel\">\r\n              Group: <select class=\"newTask-group\">\r\n               ${formController.currentProjects()}\r\n              </select>\r\n            </label>\r\n        </div>\r\n        <label for=\"newTask-description\" class=\"newTask-descriptionLabel\">Task description</label>\r\n        <textarea name=\"newTask-description\" class=\"newTask-description\"></textarea>\r\n        <label for=\"newTask-notes\" class=\"newTask-notesLabel\">Notes</label>\r\n        <div class=\"newTask-notes\" id=\"newTask-subItems\">\r\n        <div id=\"subItemsAdder\">\r\n          <div title=\"Add Sub Task\" id=\"addSubTasks\"></div>\r\n          <div title=\"Add Sub Note\" id=\"addSubNotes\"></div>\r\n        </div>\r\n        </div>\r\n        <div class=\"newTask-infoBox2\">\r\n          <span id=\"newTask-etcContainer\" class=\"newTask-etc\">\r\n            ETC: Days 0 Hours 0 Minuets 0\r\n          </span>\r\n          <label class=\"newTask-addToHome\">Add to HomePage<input type=\"checkbox\" name=\"newTask-addToHome\" checked></label>\r\n        </div>\r\n        <button class=\"newTask-addButton\">Add Task</button>\r\n      </form>\r\n          `;\r\n    document.body.appendChild(mask);\r\n    document.getElementsByName(\"newTask-dueDate\")[0].addEventListener(\"change\", formController.calculateETC)\r\n  }\r\n}\r\n\r\nfunction resetMain(e) {\r\n  if (e.target.classList.contains(\"blackMask\")) {\r\n    document.body.removeChild(document.querySelector(\".blackMask\"));\r\n  }\r\n}\r\n\r\n// Animation event listeners\r\nwindow.addEventListener(\"click\", addNewTaskFormAppear);\r\nwindow.addEventListener(\"click\", resetMain);\r\nwindow.addEventListener(\"submit\", resetMain);\r\n\r\n// Functions event listeners\r\nwindow.addEventListener(\"click\", formController.showNoteInput);\r\nwindow.addEventListener(\"click\", formController.removeSubItem);\r\n"],"names":[],"sourceRoot":""}